// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  role     String?
  email    String    @unique
  password String
  snippets Snippet[]
  comments Comment[]
  likes    Like[]
}

model Snippet {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  code      String
  language  String
  tags      String[]
  author    User?     @relation(fields: [authorId], references: [id])
  authorId  String?   @db.ObjectId
  comments  Comment[]
  likes     Like[]
  createdAt DateTime  @default(now())
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String // <-- Add this if you want to store the comment text
  createdAt DateTime @default(now())

  // Relations
  author   User   @relation(fields: [authorId], references: [id])
  authorId String @db.ObjectId

  snippet   Snippet @relation(fields: [snippetId], references: [id])
  snippetId String  @db.ObjectId
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
  snippet   Snippet? @relation(fields: [snippetId], references: [id])
  snippetId String?  @db.ObjectId

  @@unique([userId, snippetId], name: "userId_snippetId")
}
